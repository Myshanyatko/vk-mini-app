{"version":3,"sources":["img/logoMiniApp.png","panels/Home.js","Friend.js","ListFriends.js","WhoseStatus.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","className","src","logo","stretched","size","mode","onClick","Friend","props","useState","result","setResult","right","setPressed","disabled","pressed","imageSrc","name","ListFriends","friendsMap","friends","map","friend","photo_100","first_name","last_name","status","randomFriend1","e","setGoFriend","prevState","goFriends","WhoseStatus","goFriend","FriendsWithStatus","filter","parseInt","Math","random","length","statusFriend","randomFriend2","randomFriend3","array","i","j","floor","temp","shuffleArray","left","App","bridge","send","scheme","setScheme","activePanel","setActivePanel","fetchedFriends","setFriends","popout","setPopout","fields","useEffect","a","userToken","access_token","dataFriends","response","items","console","log","subscribe","detail","type","data","fetchData","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1587a112.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoMiniApp.8d40b96d.png\";","import React from 'react';\nimport logo from '../img/logoMiniApp.png';\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id} >\n\t\t<PanelHeader>Отгадай, чей статус</PanelHeader>\n\t\t<p className='homeDescription'>Проверим, как хорошо ты знаешь своих друзей?<br /> В этом мини-приложении нужно отгадывать, кому из твоих друзей вконтакте принадлежит статус.</p>\n\n\t\t<Group >\n\t\t\t<Div className='home'>\n\t\t\t\t<img src={logo}></img>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"whoseStatus\">\n\t\t\t\t\tПогнали!\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\n\nexport default Home;\n","import React, { useState} from 'react';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nconst Friend = (props) => {\n\tconst [result, setResult] = useState('neutral');\n\tconst selectedFriend = () => {\n\t\tif (props.right){\n\t\t\tsetResult('correct')\n\t\t}\n\t\telse{setResult('incorrect')}\n\t\tprops.setPressed(true)\n\t}\n\t\n\n\treturn(\n\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={()=>selectedFriend()} className={'friend '+result} disabled={props.pressed}>\n\t\t\t\t\t<img src={props.imageSrc}></img>\n\t\t\t<p>{props.name}</p>\n\t\t</Button>\n\t\t\n\t)\n}\n\nexport default Friend;\n","import React, { useState, useEffect } from 'react';\nimport Friend from './Friend';\nimport { Button, Panel } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nconst ListFriends = props => {\n\tconst [pressed, setPressed] = useState(false)\n\n\tconst goFriends = (e) => {\n\t\tprops.go(e)\n\t\tsetPressed(false)\n\t\tprops.setGoFriend(prevState => !prevState)\n\t}\n\tconst friendsMap = props.friends.map(friend => <Friend\n\t\tkey={friend.id}\n\t\timageSrc={friend.photo_100}\n\t\tname={friend.first_name + ' ' + friend.last_name}\n\t\tstatus={friend.status}\n\t\tid={friend.id}\n\t\tright={props.randomFriend1.id == friend.id ? true : false}\n\t\tpressed={pressed}\n\t\tsetPressed={setPressed}\n\t/>)\n\n\treturn (\n\t\t<div className='listFriends'>\n\t\t\t<div className='friends' >\n\t\t\t\t{friendsMap}\n\t\t\t</div>\n\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={(e) => goFriends(e)} data-to=\"whoseStatus\" disabled={!pressed} >\n\t\t\t\tДалее\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n\nexport default ListFriends;\n","import React, { useState} from 'react';\nimport { Div, Panel, PanelHeader, PanelHeaderBack} from '@vkontakte/vkui';\nimport ListFriends from './ListFriends'\nimport '@vkontakte/vkui/dist/vkui.css';\nconst WhoseStatus = props => {\n\tconst [goFriend, setGoFriend] = useState(false)\n\n\tconst FriendsWithStatus = props.friends.filter(status => status.status != '')\n\tconst randomFriend1 = FriendsWithStatus[parseInt(Math.random() * (FriendsWithStatus.length))] //выбираем первого друга\n\tvar statusFriend = randomFriend1.status\n\n\tvar randomFriend2 = props.friends[parseInt(Math.random() * props.friends.length)]\n\twhile (randomFriend1.id == randomFriend2.id) {\n\t\trandomFriend2 = props.friends[parseInt(Math.random() * props.friends.length)]\n\t}\n\n\tvar randomFriend3 = props.friends[parseInt(Math.random() * props.friends.length)]\n\twhile (randomFriend3.id == randomFriend2.id || randomFriend3.id == randomFriend1.id) {\n\t\trandomFriend3 = props.friends[parseInt(Math.random() * props.friends.length)]\n\t}\n\n\tconst friends = [randomFriend1, randomFriend2, randomFriend3]\n\n\tfunction shuffleArray(array) {\n\t\tfor (var i = array.length - 1; i > 0; i--) {\n\t\t\tvar j = Math.floor(Math.random() * (i + 1));\n\t\t\tvar temp = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n\n\tshuffleArray(friends)\n\treturn <Panel id={props.id} >\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\n\t\t>\n\t\t\tОтгадай, чей статус\n\t\t</PanelHeader>\n\t\t<Div>\n\t\t\t<p className='status'>{statusFriend ? statusFriend : 'null'}</p>\n\t\t\t<Div >\n\t\t\t\t<ListFriends friends={friends} randomFriend1={randomFriend1} goFriend={goFriend} go={props.go} setGoFriend={setGoFriend} />\n\t\t\t</Div>\n\t\t\t</Div>\n\t</Panel>\n\n\n}\n\nexport default WhoseStatus;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './panels/Persik.css';\nimport Home from './panels/Home';\nimport WhoseStatus from './WhoseStatus';\n\nconst App = () => {\n\tconst id = 8229881\n\tbridge.send(\"VKWebAppInit\");\n\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedFriends, setFriends] = useState([]);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst fields = 'status,photo_100'\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst userToken = await bridge.send(\"VKWebAppGetAuthToken\", {\n\t\t\t\t\"app_id\": id,\n\t\t\t\t\"scope\": \"friends,status\"\n\t\t\t});\n\t\t\tconst dataFriends = await bridge.send('VKWebAppCallAPIMethod', {\n\t\t\t\t\"method\": \"friends.get\",\n\t\t\t\t\"request_id\": \"friends\",\n\t\t\t\t\"params\": { \"order\": \"name\", \"v\": '5.131', \"access_token\": userToken.access_token, \"fields\": fields }\n\t\t\t})\n\t\t\tsetFriends(dataFriends.response.items);\n\t\t\tconsole.log('fetchfriends'\t)\n\t\t\tconsole.log(fetchedFriends)\n\t\t\tsetPopout(null)\n\t\t}\n\t\tfetchData();\n\t}, [])\n\t\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t\n\treturn (<ConfigProvider scheme={scheme}>\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t<Home id='home'go={go} />\n\t\t\t\t\t\t\t<WhoseStatus id='whoseStatus' friends={fetchedFriends} go={go} />\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</SplitCol>\n\t\t\t\t</SplitLayout>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t</ConfigProvider>)\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}